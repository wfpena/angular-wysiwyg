describe('My First Test', () => {
  it('Visits the initial project page', () => {
    cy.visit('/')
    cy.contains('Basic Example with HTML Output')
  })

  it('Checks for text pattern and insert quote', () => {
    cy.visit('/')
    const editor1 = cy.get('#editor1')
    editor1.click()
    editor1.type('> Hello World')
    const editor1HTMLContent = cy.get('#html-content-edito1')
    editor1HTMLContent.should('have.text', '<div class="quote">&nbsp;Hello World</div>')
  })

  it('Should revert back to character on undo button press', () => {
    cy.visit('/')
    const editor1 = cy.get('#editor1')
    editor1.click()
    editor1.type('> ')
    const undoBtn = cy.get('.fa.fa-undo').first()
    undoBtn.click()
    const editor1HTMLContent = cy.get('#html-content-edito1')
    editor1HTMLContent.should('not.have.text', '<div class="quote">')
    editor1HTMLContent.invoke('text').should('contain', '&gt;')
    // editor1HTMLContent.invoke('text').should('contain', '&gt;&nbsp;')
  })

  // it('Should revert back to character on undo button press', () => {
  //   cy.visit('/')
  //   const editor1 = cy.get('#editor1')
  //   editor1.click()
  //   editor1.type('> ')
  //   // cy.get('body').type('{ctrl+z}{ctrl+z}{ctrl+z}{ctrl+z}')
  //   // editor1.click()
  //   // editor1.type('{enter}', {waitForAnimations: true})
  //   // editor1.type('{shift}htmll{shift}', {waitForAnimations: true})
  //   // editor1.trigger('keypress', {key: 'Shift',composed:true,altKey})
  //   // const txtArea1 = cy.get('.angular-editor-textarea').first()
  //   const undoBtn = cy.get('.fa.fa-undo').first()
  //   undoBtn.click()
  //   // txtArea1.trigger('keypress', {key:'Shift'})
  //   // txtArea1.focus()
  //   // txtArea1.click()
  //   // txtArea1.focus()
  //   // txtArea1.type('{ctrl+A}', {release:false})
  //   // txtArea1.type('dwadwadaw')
  //   // editor1.type('{ctrl+a}', {release: false})
  //   // editor1.trigger('keydown', {key:'Enter'})
  //   // editor1.type('{ctrl}', {waitForAnimations: true})
  //   const editor1HTMLContent = cy.get('#html-content-edito1')
  //   editor1HTMLContent.should('not.have.text', '<div class="quote">')
  //   editor1HTMLContent.should('contain.text', '>')
  // })
})
